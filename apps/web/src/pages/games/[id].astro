---
import { MoveLeftIcon, FullscreenIcon, WebhookIcon } from "lucide-react";

import { Button, buttonVariants } from "@/components/ui/button";
import { Icons } from "@/components/ui/icons";
import Link from "@/components/ui/link";

import PageLayout from "@/layouts/PageLayout.astro";

import data from "@/data/index";
import { cn, slugify } from "@/lib/utils";

export function getStaticPaths() {
  return data.map((item) => ({ params: { id: slugify(item.name) } }));
}

const { id } = Astro.params;

const item = data.filter((item) => slugify(item.name) === id)[0];
---

<PageLayout>
  <div class="relative flex flex-col flex-grow w-full h-full gap-4 py-6">
    <!-- Back -->
    <section class="flex items-center h-14">
      <Link
        href="/games"
        className={cn(
          buttonVariants({
            class: "flex items-center gap-2 w-max h-max capitalize",
          })
        )}
      >
        <MoveLeftIcon className="w-5 h-5" />
         Back to games
      </Link>
    </section>

    <!-- Title & Buttons -->
    <section
      class="relative p-4 rounded-lg h-max bg-background/95 text-foreground/80"
    >
      <div class="flex items-center flex-1 w-full gap-8">
        <div class="grid items-center flex-1 max-w-screen-md gap-2">
          <h1 class="font-bold uppercase md:text-lg">{item.name}</h1>
          <span class="border-b border-current/90"></span>
          <p class="hidden text-sm font-medium md:block">{item.description}</p>
        </div>
        <div class="flex items-center justify-start gap-4 sm:ml-auto w-max">
          {
            item.link && (
              <Link
                target="_blank"
                href={item.link}
                className={cn(
                  buttonVariants({ class: "flex items-center gap-2" })
                )}
              >
                <WebhookIcon className="w-5 h-5" />
                <span class="hidden sm:block">Source</span>
              </Link>
            )
          }
          {
            item.repository && (
              <Link
                target="_blank"
                href={item.repository}
                className={cn(
                  buttonVariants({
                    variant: "ghost",
                    class: "flex items-center gap-2 text-white bg-[#333]",
                  })
                )}
              >
                <Icons.gitHub className="w-5 h-5" />
                <span class="hidden sm:block">Repo</span>
              </Link>
            )
          }
        </div>
      </div>
    </section>

    <!-- IFrame Content -->
    <section class="flex-1 relative w-full min-h-[56rem] rounded-lg">
      <iframe
        width="100%"
        height="100%"
        allowfullscreen
        src={item.link}
        id="embeddedGame"
        allow={"geolocation *"}
        class="absolute inset-0 !p-0 !m-0 border-0"
        sandbox="allow-scripts allow-modals allow-pointer-lock allow-top-navigation allow-same-origin allow-storage-access-by-user-activation"
      >
        <p> Fallback link for browsers that don't support iframes</p>
      </iframe>

      <div class="absolute bottom-0 left-0 right-0 text-white bg-[#333]/40">
        <div class="container flex items-center gap-10 py-4 mx-auto">
          <Button
            client:load
            size="icon"
            onClick={() => {
              const element = document.querySelector(
                "iframe"
              ) as HTMLIFrameElement;
              if (!document.fullscreenElement) {
                element
                  .requestFullscreen()
                  .then(() => {
                    alert("FullScreen");
                    element.classList.toggle("fullScreen");
                  })
                  .catch((err) => {
                    alert(
                      `Error attempting to enable fullscreen mode: ${err.message} (${err.name})`
                    );
                  });
              } else {
                element.classList.toggle("fullScreen");
                document.exitFullscreen();
              }
            }}
          >
            <FullscreenIcon className="w-6 h-6" />
            <span class="sr-only">fullscreen</span>
          </Button>
        </div>
      </div>
    </section>
  </div>
</PageLayout>

<style is:inline>
  .fullScreen {
    position: fixed;
    inset: 0;
    z-index: 999;
    width: 100vw;
    height: 100vh;
  }
</style>
